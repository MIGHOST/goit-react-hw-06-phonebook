{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contacts/Contacts.module.css","components/Button/Button.module.css","components/ContactList/ContactList.module.css","components/ContactFilter/ContactFilter.module.css","components/Phonebook/Phonebook.module.css","assert/transition/pop.module.css","assert/transition/slide.module.css","components/Button/Button.js","components/ContactForm/ContactForm.js","store/action/contactAction.js","container/ContactFormContainer.js","components/Contacts/Contacts.js","container/ContactContainer.js","components/ContactList/ContactList.js","helpers/filterContact.js","container/ContactListContainer.js","components/ContactFilter/ContactFilter.js","store/action/filterAction.js","container/ContactFilterContainer.js","components/Phonebook/Phonebook.js","helpers/editLocalStorage.js","container/PhBookContainer.js","components/App/App.js","helpers/findContactInStore.js","store/reducer/contactReduce.js","store/reducer/filterReducer.js","store/store.js","index.js"],"names":["module","exports","Button","title","btnClass","disabled","styles","active","type","className","ContactForm","state","name","number","handleNameChange","e","target","value","setState","handleSubmit","preventDefault","length","isNaN","toast","warn","reset","props","addOneContact","this","onSubmit","form","htmlFor","id","label","onChange","input","Component","getContacts","createAction","deleteContact","payload","contact","shortid","generate","mapDispatchToProps","connect","contacts","Contacts","container","text","onClick","btn","ContactList","TransitionGroup","list","component","map","item","CSSTransition","timeout","unmountOnExit","classNames","popTransition","key","items","filterContact","filter","toLowerCase","includes","ContactFilter","event","Phonebook","saveContacts","localStorage","getItem","JSON","parse","err","Error","get","prevProps","setItem","stringify","save","logo","position","autoClose","closeOnClick","in","slideTransition","App","PhBookContainer","findContactInStore","find","findContact","contactReducer","createReducer","filteredContact","rootReducer","combineReducers","filterReducer","store","configureStore","reducer","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,mBCA/HD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,KAAO,uBAAuB,IAAM,wB,mBCA9FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,8CAA8C,OAAS,8C,mBCApHD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,6B,mBCA3DD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,MAAQ,+B,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAY,6BAA6B,KAAO,0B,mBCAjGD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,WAAa,0B,mBCA1HD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,sB,8OCiBhFC,EAdA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MACVC,EADgC,EAAfC,SACKC,IAAOD,SAAWC,IAAOC,OAErD,OACE,4BAAQC,KAAK,SAASC,UAAWL,GAC9BD,I,QCHcO,E,2MAKnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,iBAAmB,SAAAC,GAAM,IAAD,EACEA,EAAEC,OAAlBJ,EADc,EACdA,KAAMK,EADQ,EACRA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,MAEO,EAAKT,MAAtBC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACd,OAAID,EAAKS,QAAU,IAAMC,MAAMV,IAC7BW,IAAMC,KAAK,qCACX,EAAKC,SAEIZ,EAAOQ,QAAU,GAAKC,MAAMT,IACrCU,IAAMC,KAAK,uCACX,EAAKC,UAGL,EAAKC,MAAMC,cAAX,eAA8B,EAAKhB,aAGrC,EAAKc,U,EAGPA,MAAQ,WACN,EAAKP,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,wEAG1B,IAAD,EACkBe,KAAKjB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACRR,EAAWO,EAAKS,QAAU,GAAKR,EAAOQ,QAAU,EACtD,OACE,0BAAMQ,SAAUD,KAAKT,aAAcV,UAAWH,IAAOwB,MACnD,2BAAOC,QAASH,KAAKI,GAAIvB,UAAWH,IAAO2B,OAA3C,OAEE,2BACEzB,KAAK,OACLS,MAAOL,EACPA,KAAK,OACLsB,SAAUN,KAAKd,iBACfkB,GAAIJ,KAAKI,GACTvB,UAAWH,IAAO6B,SAGtB,2BAAOJ,QAASH,KAAKI,GAAIvB,UAAWH,IAAO2B,OAA3C,SAEE,2BACEzB,KAAK,OACLS,MAAOJ,EACPD,KAAK,SACLsB,SAAUN,KAAKd,iBACfkB,GAAIJ,KAAKI,GACTvB,UAAWH,IAAO6B,SAGtB,kBAAC,EAAD,CAAQhC,MAAM,cAAcE,SAAUA,S,GAlEL+B,a,wBCH5BC,EAAcC,YAAa,4BAE3BC,EAAgBD,YAAa,kBAAkB,SAAAN,GAAE,MAAK,CACjEQ,QAASR,MAGEL,EAAgBW,YAAa,mBAAmB,SAAAG,GAAO,MAAK,CACvED,QAAQ,eACHC,EADE,CAELT,GAAIU,IAAQC,iBCHVC,EAAqB,CACzBjB,iBAGakB,eAVS,SAAAlC,GACtB,MAAO,CACLmC,SAAUnC,EAAMmC,YAQoBF,EAAzBC,CAA6CnC,G,iBCa7CqC,EAtBE,SAAC,GAAD,IAAGnC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQmB,EAAjB,EAAiBA,GAAIO,EAArB,EAAqBA,cAArB,OACf,yBAAK9B,UAAWH,IAAO0C,WACrB,uBAAGvC,UAAWH,IAAO2C,MAClBrC,EADH,KACWC,GAEX,4BACEL,KAAK,SACL0C,QAAS,kBAAMX,EAAcP,IAC7BvB,UAAWH,IAAO6C,KAHpB,OCCEP,EAAqB,CACzBL,iBAEaM,eATS,SAAAlC,GACtB,MAAO,CACLmC,SAAUnC,EAAMmC,YAOoBF,EAAzBC,CAA6CE,G,kDCmB7CK,EAzBK,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAH,OAClB,kBAACO,EAAA,EAAD,CAAiB5C,UAAWH,IAAOgD,KAAMC,UAAU,MAChDT,EAASU,KAAI,SAAAC,GAAI,OAChB,kBAACC,EAAA,EAAD,CACEC,QAAS,IACTC,eAAa,EACbC,WAAYC,IACZC,IAAKN,EAAKzB,IAEV,wBAAIvB,UAAWH,IAAO0D,OACpB,kBAAC,EAAYP,UCVNQ,EAPK,SAACnB,EAAUoB,GAAX,OACpBpB,EAASoB,QAAO,SAAAzB,GAAO,OACrBA,EAAQ7B,KAAKuD,cAAcC,SAASF,EAAOC,mBCWhCtB,eATS,SAAAlC,GACtB,IAAMmC,EAAWnC,EAAMmC,SACjBoB,EAASvD,EAAMuD,OAErB,MAAO,CACLpB,SAFuBmB,EAAcnB,EAAUoB,MAMpCrB,CAAyBO,G,iBCQzBiB,EAjBO,SAAC,GAAD,IAAGpD,EAAH,EAAGA,MAAOgD,EAAV,EAAUA,cAAV,OACpB,2BAAOxD,UAAWH,IAAO2B,OAAzB,uBAEE,2BACEzB,KAAK,OACLC,UAAWH,IAAO6B,MAClBlB,MAAOA,EACPiB,SAAU+B,MCLDA,EAJO3B,YAAa,kBAAkB,SAAAgC,GAAK,MAAK,CAC7D9B,QAAS8B,EAAMtD,OAAOC,UCKlB2B,EAAqB,CACzBqB,iBAGapB,eARS,SAAAlC,GAAK,MAAK,CAChCM,MAAON,EAAMuD,UAOyBtB,EAAzBC,CAA6CwB,G,2CCqC7CE,G,4LApCX,IAAMC,ECLE,SAAAT,GACV,IACE,IAAMC,EAAQS,aAAaC,QAAQX,GAEnC,OAAOC,EAAQW,KAAKC,MAAMZ,GAAS,KACnC,MAAOa,GACP,MAAM,IAAIC,ODDWC,CAAI,YACrBP,GACF5C,KAAKV,SAAS,CAAE4B,SAAU0B,M,yCAGXQ,GAAY,IACrBlC,EAAalB,KAAKF,MAAlBoB,SACJkC,EAAUlC,WAAaA,GCpBlB,SAACiB,EAAK9C,GACjB,IACEwD,aAAaQ,QAAQlB,EAAKY,KAAKO,UAAUjE,IACzC,MAAO4D,GACP,MAAM,IAAIC,ODiBRK,CAAK,WAAYrC,K,+BAIX,IACAA,EAAalB,KAAKF,MAAlBoB,SACR,OACE,oCACE,wBAAIrC,UAAWH,IAAO8E,MAAtB,aACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAgBC,SAAS,YAAYC,UAAW,IAAMC,cAAY,IAClE,kBAAC7B,EAAA,EAAD,CACE8B,GAAI1C,EAASzB,QAAU,EACvBsC,QAAS,IACTC,eAAa,EACbC,WAAY4B,MAEZ,6BACE,wBAAIhF,UAAWH,IAAO2C,MAAtB,YACA,kBAAC,EAAD,MACA,kBAAC,EAAD,a,GA9BYb,aEDlBQ,GAAqB,CACzBjB,gBACAY,iBAGaM,gBAXS,SAAAlC,GACtB,MAAO,CACLmC,SAAUnC,EAAMmC,YASoBF,GAAzBC,CAA6C0B,ICV7CmB,GAFH,kBAAM,kBAACC,GAAD,O,iBCaDC,GATY,SAACjF,EAAO8B,GAEjC,QAPgB,SAACK,EAAUL,GAAX,OAClBK,EAAS+C,MAAK,SAAApC,GAAI,OAAIA,EAAK7C,OAAS6B,EAAQ7B,QAKlBkF,CAAYnF,EAAO8B,KAEzClB,IAAMC,KAAN,UAAciB,EAAQ7B,KAAtB,8BACO,ICUEmF,GAbQC,YAAc,IAAD,mBACjCrE,GAAgB,SAAChB,EAAD,GAAyB,IAAf6B,EAAc,EAAdA,QACzB,OAAIoD,GAAmBjF,EAAO6B,GACrB7B,EAEH,GAAN,oBAAWA,GAAX,CAAkB6B,OALc,cAQjCD,GAAgB,SAAC5B,EAAD,OAAU6B,EAAV,EAAUA,QAAV,OACf7B,EAAMuD,QAAO,SAAAzB,GAAO,OAAIA,EAAQT,KAAOQ,QATP,cAUjCH,GAAc,SAAC1B,EAAD,OAAU6B,EAAV,EAAUA,QAAV,6BAA4B7B,GAA5B,CAAmC6B,OAVhB,ICDrByD,GAJSD,YAAc,GAAD,eAClC/B,GAAgB,SAACtD,EAAD,YAAU6B,Y,SCEvB0D,GAAcC,2BAAgB,CAClCrD,SAAUiD,GACV7B,OAAQkC,KAUKC,GAPDC,YACZ,CACEC,QAASL,IAEXM,+BCRFC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.7af4eb85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Zocm\",\"label\":\"ContactForm_label__VunIx\",\"input\":\"ContactForm_input__3m8Lp\",\"btn\":\"ContactForm_btn__3Mg4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__3pyIw\",\"text\":\"Contacts_text__3N0QD\",\"btn\":\"Contacts_btn__3yM8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2YATr\",\"disabled\":\"Button_disabled__2ec1C Button_button__2YATr\",\"active\":\"Button_active__HPaBN Button_button__2YATr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1aXbn\",\"items\":\"ContactList_items__1-7_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__Kem4d\",\"input\":\"ContactFilter_input__1ncKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Phonebook_logo__33zII\",\"logo-wake\":\"Phonebook_logo-wake__FHYKJ\",\"text\":\"Phonebook_text__1keFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3reIL\",\"enterActive\":\"pop_enterActive__34ecH\",\"exit\":\"pop_exit__2guTg\",\"exitActive\":\"pop_exitActive__1Vw-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3LT_2\",\"enterActive\":\"slide_enterActive__LpnA7\",\"exit\":\"slide_exit__1iVaS\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ title, disabled }) => {\r\n  const btnClass = disabled ? styles.disabled : styles.active;\r\n\r\n  return (\r\n    <button type=\"submit\" className={btnClass}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n};\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport Button from '../Button/Button';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    addOneContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    if (name.length <= 1 || !isNaN(name)) {\r\n      toast.warn('Contact name is not correct!');\r\n      this.reset();\r\n      return;\r\n    } else if (number.length <= 1 || isNaN(number)) {\r\n      toast.warn('Contact number is not correct!');\r\n      this.reset();\r\n      return;\r\n    } else {\r\n      this.props.addOneContact({ ...this.state });\r\n    }\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const disabled = name.length <= 0 || number.length <= 0;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label htmlFor={this.id} className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleNameChange}\r\n            id={this.id}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.id} className={styles.label}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleNameChange}\r\n            id={this.id}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <Button title=\"Add contact\" disabled={disabled} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const getContacts = createAction('GET_CONTACTS/getContacts');\r\n\r\nexport const deleteContact = createAction('DELETE_CONTACT', id => ({\r\n  payload: id,\r\n}));\r\n\r\nexport const addOneContact = createAction('ADD_ONE_CONTACT', contact => ({\r\n  payload: {\r\n    ...contact,\r\n    id: shortid.generate(),\r\n  },\r\n}));\r\n","import ContactForm from '../components/ContactForm/ContactForm';\r\nimport { connect } from 'react-redux';\r\nimport { addOneContact } from '../store/action/contactAction';\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addOneContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\nconst Contacts = ({ name, number, id, deleteContact }) => (\r\n  <div className={styles.container}>\r\n    <p className={styles.text}>\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => deleteContact(id)}\r\n      className={styles.btn}\r\n    >\r\n      X\r\n    </button>\r\n  </div>\r\n);\r\n\r\nContacts.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import Contacts from '../components/Contacts/Contacts';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../store/action/contactAction';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../../container/ContactContainer';\r\nimport styles from './ContactList.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport popTransition from '../../assert/transition/pop.module.css';\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <TransitionGroup className={styles.list} component=\"ul\">\r\n    {contacts.map(item => (\r\n      <CSSTransition\r\n        timeout={250}\r\n        unmountOnExit\r\n        classNames={popTransition}\r\n        key={item.id}\r\n      >\r\n        <li className={styles.items}>\r\n          <Contact {...item} />\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","const filterContact = (contacts, filter) =>\r\n  contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n\r\n\r\n  export default filterContact;","import ContactList from '../components/ContactList/ContactList';\r\nimport { connect } from 'react-redux';\r\nimport filterContact from '../helpers/filterContact';\r\n\r\nconst mapStateToProps = state => {\r\n  const contacts = state.contacts;\r\n  const filter = state.filter;\r\n  const filteredContacts = filterContact(contacts, filter);\r\n  return {\r\n    contacts: filteredContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, filterContact }) => (\r\n  <label className={styles.label}>\r\n    Find contact by name\r\n    <input\r\n      type=\"text\"\r\n      className={styles.input}\r\n      value={value}\r\n      onChange={filterContact}\r\n    />\r\n  </label>\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  filterContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContact = createAction('FILTER_CONTACT', event => ({\r\n  payload: event.target.value,\r\n}));\r\n\r\nexport default filterContact;\r\n","import ContactFilter from '../components/ContactFilter/ContactFilter';\r\nimport filterContact from '../store/action/filterAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  filterContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\r\n","import React, { Component } from 'react';\r\nimport ContactForm from '../../container/ContactFormContainer';\r\nimport ContactList from '../../container/ContactListContainer';\r\nimport ContactFilter from '../../container/ContactFilterContainer';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { save, get } from '../../helpers/editLocalStorage';\r\nimport styles from './Phonebook.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport slideTransition from '../../assert/transition/slide.module.css';\r\n\r\nclass Phonebook extends Component {\r\n  componentDidMount() {\r\n    const saveContacts = get('contacts');\r\n    if (saveContacts) {\r\n      this.setState({ contacts: saveContacts });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const { contacts } = this.props;\r\n    if (prevProps.contacts !== contacts) {\r\n      save('contacts', contacts);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <>\r\n        <h1 className={styles.logo}>Phonebook</h1>\r\n        <ContactForm />\r\n        <ToastContainer position=\"top-right\" autoClose={3000} closeOnClick />\r\n        <CSSTransition\r\n          in={contacts.length >= 1}\r\n          timeout={250}\r\n          unmountOnExit\r\n          classNames={slideTransition}\r\n        >\r\n          <div>\r\n            <h2 className={styles.text}>Contacts</h2>\r\n            <ContactFilter />\r\n            <ContactList />\r\n          </div>\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport { save, get };\r\n","import { connect } from 'react-redux';\r\nimport Phonebook from '../components/Phonebook/Phonebook';\r\nimport { addOneContact, deleteContact } from '../store/action/contactAction';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addOneContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from 'react';\nimport PhBookContainer from '../../container/PhBookContainer';\n\nconst App = () => <PhBookContainer />;\n\nexport default App;\n","import { toast } from 'react-toastify';\r\n\r\nconst findContact = (contacts, contact) =>\r\n  contacts.find(item => item.name === contact.name);\r\n\r\n\r\n\r\n  const findContactInStore = (state, contact)=> {\r\n    const receivedContact = findContact(state, contact);\r\n    if (receivedContact) {\r\n      toast.warn(`${contact.name} is already in contacts!`);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  export default findContactInStore;","import {\r\n  getContacts,\r\n  deleteContact,\r\n  addOneContact,\r\n} from '../action/contactAction';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport findContactInStore from '../../helpers/findContactInStore';\r\n\r\nconst contactReducer = createReducer([], {\r\n  [addOneContact]: (state, { payload }) => {\r\n    if (findContactInStore(state, payload)) {\r\n      return state;\r\n    }\r\n    return [...state, payload];\r\n  },\r\n\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [getContacts]: (state, { payload }) => [...state, payload],\r\n});\r\n\r\nexport default contactReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport filterContact from '../action/filterAction';\r\n\r\nconst filteredContact = createReducer('', {\r\n  [filterContact]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default filteredContact;\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './reducer/contactReduce';\r\nimport filterReducer from './reducer/filterReducer';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst store = configureStore(\r\n  {\r\n    reducer: rootReducer,\r\n  },\r\n  devToolsEnhancer(),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assert/index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}